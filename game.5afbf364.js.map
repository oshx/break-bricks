{"version":3,"sources":["game.ts"],"names":[],"mappings":"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","file":"game.5afbf364.js","sourceRoot":"../sources","sourcesContent":["import '~/game.scss'\r\n;((scripts) => {\r\n  Array.prototype.slice\r\n    .call(scripts)\r\n    .forEach((script) => document.body.removeChild(script))\r\n})(document.getElementsByName('script'))\r\n\r\nconst COLOR = '#ccc'\r\nconst POINT = '#fc0'\r\nconst FONT = '16px arial, sans-serif'\r\nconst ALIGN_CENTER = 'center'\r\nconst ALIGN_START = 'start'\r\nconst MAX_SPEED = 5\r\n\r\nconst canvas = ((c) => {\r\n  document.body.appendChild(c)\r\n  c.width = 480\r\n  c.height = 320\r\n  return c as HTMLCanvasElement\r\n})(document.createElement('canvas'))\r\nconst ctx = canvas.getContext('2d') as CanvasRenderingContext2D\r\n\r\nlet stage = 1\r\nlet penalty = 1\r\nlet ballRadius = 10\r\nlet x = canvas.width / 2\r\nlet y = canvas.height - ballRadius * 3\r\nlet dx = 2\r\nlet dy = -2\r\nlet paddleHeight = 10\r\nlet paddleWidth = 75\r\nlet paddleX = (canvas.width - paddleWidth) / 2\r\nlet rightPressed = false\r\nlet leftPressed = false\r\nlet brickRowCount = 3\r\nlet brickColumnCount = 1\r\nlet brickWidth!: number\r\nlet brickHeight = 20\r\nlet brickPadding = 10\r\nlet brickOffsetTop = 30\r\nlet brickOffsetLeft = 30\r\nlet score = 0\r\nlet lives = 3\r\nlet pause: boolean | string = true\r\nlet end: boolean | string = false\r\n\r\ninterface StageInfo {\r\n  brickRowCount: number\r\n  brickColumnCount: number\r\n}\r\n\r\ninterface Stages {\r\n  [key: number]: StageInfo\r\n}\r\n\r\nconst stages: Stages = {\r\n  1: {\r\n    brickRowCount: 3,\r\n    brickColumnCount: 1,\r\n  },\r\n  2: {\r\n    brickRowCount: 3,\r\n    brickColumnCount: 2,\r\n  },\r\n  3: {\r\n    brickRowCount: 4,\r\n    brickColumnCount: 2,\r\n  },\r\n  4: {\r\n    brickRowCount: 4,\r\n    brickColumnCount: 3,\r\n  },\r\n  5: {\r\n    brickRowCount: 5,\r\n    brickColumnCount: 3,\r\n  },\r\n}\r\n\r\ncanvas.width\r\n\r\nconst STATUS_ON = 10\r\n\r\nlet bricks!: { x: number; y: number; status: number }[][]\r\n\r\nfunction setup() {\r\n  brickWidth =\r\n    (canvas.width - 2 * brickOffsetLeft) / brickRowCount - brickPadding\r\n  bricks = new Array(brickColumnCount).fill(null).map((_, c) =>\r\n    new Array(brickRowCount).fill(null).map((_, r) => ({\r\n      x: r * (brickWidth + brickPadding) + brickOffsetLeft,\r\n      y: c * (brickHeight + brickPadding) + brickOffsetTop,\r\n      status: STATUS_ON,\r\n    })),\r\n  )\r\n}\r\n\r\nfunction keyDownHandler(e: KeyboardEvent): void {\r\n  if (e.keyCode === 39) {\r\n    rightPressed = true\r\n  } else if (e.keyCode === 37) {\r\n    leftPressed = true\r\n  }\r\n}\r\nfunction keyUpHandler(e: KeyboardEvent): void {\r\n  if (e.keyCode === 39) {\r\n    rightPressed = false\r\n  } else if (e.keyCode === 37) {\r\n    leftPressed = false\r\n  } else if (e.keyCode === 13) {\r\n    togglePauseHandler()\r\n  }\r\n}\r\nfunction mouseMoveHandler(e: MouseEvent): void {\r\n  let relativeX = e.clientX - canvas.offsetLeft\r\n  if (relativeX > 0 && relativeX < canvas.width) {\r\n    paddleX = relativeX - paddleWidth / 2\r\n  }\r\n}\r\nfunction togglePauseHandler(): void {\r\n  if (end) return document.location.reload()\r\n  pause = !pause\r\n  draw()\r\n}\r\n\r\ndocument.addEventListener('keydown', keyDownHandler, false)\r\ndocument.addEventListener('keyup', keyUpHandler, false)\r\ndocument.addEventListener('mousemove', mouseMoveHandler, false)\r\ndocument.addEventListener('click', togglePauseHandler, false)\r\n\r\nfunction calculateState(): void {\r\n  pause = `[${stage}판]을 깼습니다!`\r\n\r\n  stage++\r\n  lives++\r\n  score += lives * stage * ballRadius\r\n\r\n  if (!stages.hasOwnProperty(stage)) {\r\n    end = `축하합니다! 다 깼습니다! [${score}점 (●${lives})]`\r\n    return draw()\r\n  }\r\n\r\n  const current = stages[stage]\r\n  brickRowCount = current.brickRowCount\r\n  brickColumnCount = current.brickColumnCount\r\n  setup()\r\n  birth()\r\n  draw()\r\n}\r\n\r\nfunction collisionDetection(): void {\r\n  return bricks.forEach((r) =>\r\n    r.forEach((b) => {\r\n      if (\r\n        b.status !== STATUS_ON ||\r\n        !(x > b.x && x < b.x + brickWidth && y > b.y && y < b.y + brickHeight)\r\n      ) {\r\n        return\r\n      }\r\n      dy = -dy\r\n      --b.status\r\n      score += ballRadius * stage\r\n      if (bricks.some((r) => r.some((b) => b.status === STATUS_ON))) {\r\n        return\r\n      }\r\n      calculateState()\r\n    }),\r\n  )\r\n}\r\n\r\nfunction drawBall(): void {\r\n  ctx.beginPath()\r\n  ctx.arc(x, y, ballRadius, 0, Math.PI * 2)\r\n  ctx.fillStyle = COLOR\r\n  ctx.fill()\r\n  ctx.closePath()\r\n}\r\nfunction drawPaddle(): void {\r\n  ctx.beginPath()\r\n  ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight)\r\n  ctx.fillStyle = COLOR\r\n  ctx.fill()\r\n  ctx.closePath()\r\n}\r\nfunction drawBricks(): void {\r\n  return bricks.forEach((r) =>\r\n    r.forEach((b) => {\r\n      if (b.status === 0) return\r\n      ctx.beginPath()\r\n      ctx.rect(b.x, b.y, brickWidth, brickHeight)\r\n      if (b.status === STATUS_ON) {\r\n        ctx.fillStyle = COLOR\r\n        ctx.fill()\r\n      } else {\r\n        ctx.strokeStyle = POINT\r\n        ctx.stroke()\r\n        b.status--\r\n      }\r\n      ctx.closePath()\r\n    }),\r\n  )\r\n}\r\nfunction drawSystemInfo(): void {\r\n  ctx.font = FONT\r\n  ctx.fillStyle = COLOR\r\n  ctx.textAlign = ALIGN_START\r\n  ctx.fillText(\r\n    `[${stage}판] ${score.toLocaleString('en')} / ●${lives}`,\r\n    ballRadius,\r\n    20,\r\n  )\r\n}\r\n\r\nfunction drawMessage(): void {\r\n  if (end || pause) {\r\n    const message =\r\n      typeof end === 'string'\r\n        ? end\r\n        : typeof pause === 'string'\r\n        ? pause\r\n        : '클릭하거나 엔터키를 누르세요.'\r\n    ctx.font = FONT\r\n    ctx.fillStyle = POINT\r\n    ctx.textAlign = ALIGN_CENTER\r\n    ctx.fillText(message, canvas.width / 2, (canvas.height / 3) * 2)\r\n  }\r\n}\r\n\r\nfunction birth(): void {\r\n  x = canvas.width / 2\r\n  y = canvas.height - 30\r\n\r\n  const s = Math.min(stage + penalty, MAX_SPEED)\r\n  dx = s\r\n  dy = -s\r\n  paddleX = (canvas.width - paddleWidth) / 2\r\n  pause = typeof pause === 'string' ? pause : true\r\n}\r\n\r\nfunction calculation(): void {\r\n  if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\r\n    dx = -dx\r\n  }\r\n  if (y + dy < ballRadius) {\r\n    dy = -dy\r\n  } else if (y + dy > canvas.height - ballRadius) {\r\n    if (x > paddleX && x < paddleX + paddleWidth) {\r\n      dy = -dy\r\n    } else {\r\n      lives--\r\n      if (!lives) {\r\n        pause = '실패!'\r\n        return draw()\r\n      } else {\r\n        birth()\r\n      }\r\n    }\r\n  }\r\n\r\n  if (rightPressed && paddleX < canvas.width - paddleWidth) {\r\n    paddleX += 7\r\n  } else if (leftPressed && paddleX > 0) {\r\n    paddleX -= 7\r\n  }\r\n\r\n  x += dx\r\n  y += dy\r\n}\r\n\r\nfunction drawEnd(): void {\r\n  pause = false\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n  drawMessage()\r\n}\r\n\r\nfunction draw(): void {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n  drawBricks()\r\n  drawBall()\r\n  drawPaddle()\r\n  drawSystemInfo()\r\n  drawMessage()\r\n  collisionDetection()\r\n  if (end || !stages.hasOwnProperty(stage)) {\r\n    return drawEnd()\r\n  }\r\n  if (pause) return\r\n  if (!lives) {\r\n    end = '구슬이 없습니다.'\r\n  }\r\n  calculation()\r\n  requestAnimationFrame(draw)\r\n}\r\n\r\nsetup()\r\nbirth()\r\ndraw()\r\n"]}